
*** The buffer size is 300
***********************************************
 On-machine Exercise 05                       *
 Mission 1: External Merge Sort on a Big File *
 Mission 2: Construction of Primary Index     *
***********************************************
########################################################
Mission 1: External merge sort 
########################################################

Input the file name: [0]Quit

The internal sort is completed. Check the initial sorted runs! 

Now there are 64 runs.

Now there are 32 runs.

Now there are 16 runs.

Now there are 8 runs.

Now there are 4 runs.

Now there are 2 runs.

Now there are 1 runs.

The execution time ...
Internal Sort = 9.544 ms
External Sort = 9.835 ms
Total Execution Time = 19.379 ms


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Mission 2: Build the primary index 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

<Primary index>: (key, offset)
[1] (1, 0)
[2] (0.99, 187)
[3] (0.98, 372)
[4] (0.97, 574)
[5] (0.96, 773)
[6] (0.95, 970)
[7] (0.94, 1156)
[8] (0.93, 1332)
[9] (0.92, 1521)
[10] (0.91, 1723)
[11] (0.9, 1905)
[12] (0.89, 2081)
[13] (0.88, 2273)
[14] (0.87, 2482)
[15] (0.86, 2682)
[16] (0.85, 2887)
[17] (0.84, 3102)
[18] (0.83, 3253)
[19] (0.82, 3438)
[20] (0.81, 3623)
[21] (0.8, 3800)
[22] (0.79, 3981)
[23] (0.78, 4164)
[24] (0.77, 4344)
[25] (0.76, 4561)
[26] (0.75, 4729)
[27] (0.74, 4908)
[28] (0.73, 5079)
[29] (0.72, 5282)
[30] (0.71, 5471)
[31] (0.7, 5662)
[32] (0.69, 5871)
[33] (0.68, 6059)
[34] (0.67, 6234)
[35] (0.66, 6446)
[36] (0.65, 6619)
[37] (0.64, 6778)
[38] (0.63, 6965)
[39] (0.62, 7153)
[40] (0.61, 7351)
[41] (0.6, 7524)
[42] (0.59, 7704)
[43] (0.58, 7882)
[44] (0.57, 8069)
[45] (0.56, 8274)
[46] (0.55, 8445)
[47] (0.54, 8622)
[48] (0.53, 8815)
[49] (0.52, 9010)
[50] (0.51, 9187)
[51] (0.5, 9385)
[52] (0.49, 9572)
[53] (0.48, 9757)
[54] (0.47, 9944)
[55] (0.46, 10146)
[56] (0.45, 10366)
[57] (0.44, 10582)
[58] (0.43, 10808)
[59] (0.42, 10977)
[60] (0.41, 11130)
[61] (0.4, 11311)
[62] (0.39, 11508)
[63] (0.38, 11695)
[64] (0.37, 11875)
[65] (0.36, 12070)
[66] (0.35, 12267)
[67] (0.34, 12445)
[68] (0.33, 12635)
[69] (0.32, 12837)
[70] (0.31, 13018)
[71] (0.3, 13242)
[72] (0.29, 13429)
[73] (0.28, 13604)
[74] (0.27, 13793)
[75] (0.26, 13980)
[76] (0.25, 14186)
[77] (0.24, 14382)
[78] (0.23, 14559)
[79] (0.22, 14772)
[80] (0.21, 14963)
[81] (0.2, 15140)
[82] (0.19, 15350)
[83] (0.18, 15551)
[84] (0.17, 15750)
[85] (0.16, 15935)
[86] (0.15, 16103)
[87] (0.14, 16310)
[88] (0.13, 16503)
[89] (0.12, 16692)
[90] (0.11, 16855)
[91] (0.1, 17032)
[92] (0.09, 17210)
[93] (0.08, 17407)
[94] (0.07, 17594)
[95] (0.06, 17799)
[96] (0.05, 17991)
[97] (0.04, 18180)
[98] (0.03, 18385)
[99] (0.02, 18571)
[100] (0.01, 18761)

[0]Quit or [Any other key]continue?
1

*** The buffer size is 300
***********************************************
 On-machine Exercise 05                       *
 Mission 1: External Merge Sort on a Big File *
 Mission 2: Construction of Primary Index     *
***********************************************
########################################################
Mission 1: External merge sort 
########################################################

Input the file name: [0]Quit
502

The internal sort is completed. Check the initial sorted runs! 

Now there are 74 runs.

Now there are 37 runs.

Now there are 19 runs.

Now there are 10 runs.

Now there are 5 runs.

Now there are 3 runs.

Now there are 2 runs.

Now there are 1 runs.

The execution time ...
Internal Sort = 9.221 ms
External Sort = 11.388 ms
Total Execution Time = 20.609 ms


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Mission 2: Build the primary index 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

<Primary index>: (key, offset)
[1] (1, 0)
[2] (0.99, 218)
[3] (0.98, 443)
[4] (0.97, 657)
[5] (0.96, 873)
[6] (0.95, 1079)
[7] (0.94, 1318)
[8] (0.93, 1551)
[9] (0.92, 1767)
[10] (0.91, 1978)
[11] (0.9, 2202)
[12] (0.89, 2424)
[13] (0.88, 2672)
[14] (0.87, 2889)
[15] (0.86, 3106)
[16] (0.85, 3322)
[17] (0.84, 3515)
[18] (0.83, 3738)
[19] (0.82, 3929)
[20] (0.81, 4160)
[21] (0.8, 4367)
[22] (0.79, 4599)
[23] (0.78, 4811)
[24] (0.77, 5033)
[25] (0.76, 5243)
[26] (0.75, 5481)
[27] (0.74, 5675)
[28] (0.73, 5892)
[29] (0.72, 6113)
[30] (0.71, 6334)
[31] (0.7, 6536)
[32] (0.69, 6758)
[33] (0.68, 6968)
[34] (0.67, 7186)
[35] (0.66, 7408)
[36] (0.65, 7637)
[37] (0.64, 7865)
[38] (0.63, 8081)
[39] (0.62, 8297)
[40] (0.61, 8499)
[41] (0.6, 8707)
[42] (0.59, 8946)
[43] (0.58, 9164)
[44] (0.57, 9358)
[45] (0.56, 9596)
[46] (0.55, 9833)
[47] (0.54, 10055)
[48] (0.53, 10252)
[49] (0.52, 10472)
[50] (0.51, 10691)
[51] (0.5, 10925)
[52] (0.49, 11157)
[53] (0.48, 11371)
[54] (0.47, 11605)
[55] (0.46, 11851)
[56] (0.45, 12051)
[57] (0.44, 12287)
[58] (0.43, 12526)
[59] (0.42, 12745)
[60] (0.41, 12986)
[61] (0.4, 13199)
[62] (0.39, 13415)
[63] (0.38, 13647)
[64] (0.37, 13853)
[65] (0.36, 14068)
[66] (0.35, 14288)
[67] (0.34, 14535)
[68] (0.33, 14725)
[69] (0.32, 14921)
[70] (0.31, 15141)
[71] (0.3, 15346)
[72] (0.29, 15549)
[73] (0.28, 15781)
[74] (0.27, 16023)
[75] (0.26, 16250)
[76] (0.25, 16462)
[77] (0.24, 16699)
[78] (0.23, 16908)
[79] (0.22, 17151)
[80] (0.21, 17364)
[81] (0.2, 17601)
[82] (0.19, 17813)
[83] (0.18, 18060)
[84] (0.17, 18234)
[85] (0.16, 18432)
[86] (0.15, 18674)
[87] (0.14, 18878)
[88] (0.13, 19096)
[89] (0.12, 19298)
[90] (0.11, 19504)
[91] (0.1, 19711)
[92] (0.09, 19933)
[93] (0.08, 20150)
[94] (0.07, 20366)
[95] (0.06, 20577)
[96] (0.05, 20809)
[97] (0.04, 21079)
[98] (0.03, 21282)
[99] (0.02, 21522)
[100] (0.01, 21746)

[0]Quit or [Any other key]continue?
1

*** The buffer size is 300
***********************************************
 On-machine Exercise 05                       *
 Mission 1: External Merge Sort on a Big File *
 Mission 2: Construction of Primary Index     *
***********************************************
########################################################
Mission 1: External merge sort 
########################################################

Input the file name: [0]Quit
503

The internal sort is completed. Check the initial sorted runs! 

Now there are 78 runs.

Now there are 39 runs.

Now there are 20 runs.

Now there are 10 runs.

Now there are 5 runs.

Now there are 3 runs.

Now there are 2 runs.

Now there are 1 runs.

The execution time ...
Internal Sort = 9.893 ms
External Sort = 11.812 ms
Total Execution Time = 21.705 ms


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Mission 2: Build the primary index 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

<Primary index>: (key, offset)
[1] (1, 0)
[2] (0.99, 227)
[3] (0.98, 478)
[4] (0.97, 694)
[5] (0.96, 918)
[6] (0.95, 1144)
[7] (0.94, 1367)
[8] (0.93, 1630)
[9] (0.92, 1834)
[10] (0.91, 2050)
[11] (0.9, 2263)
[12] (0.89, 2529)
[13] (0.88, 2746)
[14] (0.87, 2943)
[15] (0.86, 3157)
[16] (0.85, 3357)
[17] (0.84, 3602)
[18] (0.83, 3826)
[19] (0.82, 4041)
[20] (0.81, 4265)
[21] (0.8, 4480)
[22] (0.79, 4720)
[23] (0.78, 4945)
[24] (0.77, 5192)
[25] (0.76, 5433)
[26] (0.75, 5654)
[27] (0.74, 5890)
[28] (0.73, 6135)
[29] (0.72, 6371)
[30] (0.71, 6589)
[31] (0.7, 6829)
[32] (0.69, 7070)
[33] (0.68, 7302)
[34] (0.67, 7579)
[35] (0.66, 7826)
[36] (0.65, 8028)
[37] (0.64, 8274)
[38] (0.63, 8506)
[39] (0.62, 8735)
[40] (0.61, 8967)
[41] (0.6, 9202)
[42] (0.59, 9456)
[43] (0.58, 9682)
[44] (0.57, 9896)
[45] (0.56, 10153)
[46] (0.55, 10398)
[47] (0.54, 10618)
[48] (0.53, 10850)
[49] (0.52, 11067)
[50] (0.51, 11281)
[51] (0.5, 11516)
[52] (0.49, 11759)
[53] (0.48, 11984)
[54] (0.47, 12232)
[55] (0.46, 12488)
[56] (0.45, 12726)
[57] (0.44, 12943)
[58] (0.43, 13174)
[59] (0.42, 13429)
[60] (0.41, 13658)
[61] (0.4, 13883)
[62] (0.39, 14133)
[63] (0.38, 14373)
[64] (0.37, 14604)
[65] (0.36, 14829)
[66] (0.35, 15080)
[67] (0.34, 15324)
[68] (0.33, 15544)
[69] (0.32, 15756)
[70] (0.31, 16000)
[71] (0.3, 16223)
[72] (0.29, 16484)
[73] (0.28, 16710)
[74] (0.27, 16966)
[75] (0.26, 17215)
[76] (0.25, 17485)
[77] (0.24, 17714)
[78] (0.23, 17963)
[79] (0.22, 18215)
[80] (0.21, 18435)
[81] (0.2, 18671)
[82] (0.19, 18904)
[83] (0.18, 19137)
[84] (0.17, 19365)
[85] (0.16, 19585)
[86] (0.15, 19830)
[87] (0.14, 20025)
[88] (0.13, 20252)
[89] (0.12, 20515)
[90] (0.11, 20725)
[91] (0.1, 20975)
[92] (0.09, 21211)
[93] (0.08, 21452)
[94] (0.07, 21701)
[95] (0.06, 21921)
[96] (0.05, 22170)
[97] (0.04, 22384)
[98] (0.03, 22621)
[99] (0.02, 22851)
[100] (0.01, 23078)

[0]Quit or [Any other key]continue?
1

*** The buffer size is 300
***********************************************
 On-machine Exercise 05                       *
 Mission 1: External Merge Sort on a Big File *
 Mission 2: Construction of Primary Index     *
***********************************************
########################################################
Mission 1: External merge sort 
########################################################

Input the file name: [0]Quit
504

The internal sort is completed. Check the initial sorted runs! 

Now there are 91 runs.

Now there are 46 runs.

Now there are 23 runs.

Now there are 12 runs.

Now there are 6 runs.

Now there are 3 runs.

Now there are 2 runs.

Now there are 1 runs.

The execution time ...
Internal Sort = 11.406 ms
External Sort = 13.364 ms
Total Execution Time = 24.77 ms


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Mission 2: Build the primary index 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

<Primary index>: (key, offset)
[1] (1, 0)
[2] (0.99, 277)
[3] (0.98, 566)
[4] (0.97, 820)
[5] (0.96, 1092)
[6] (0.95, 1367)
[7] (0.94, 1640)
[8] (0.93, 1935)
[9] (0.92, 2223)
[10] (0.91, 2504)
[11] (0.9, 2773)
[12] (0.89, 3040)
[13] (0.88, 3309)
[14] (0.87, 3576)
[15] (0.86, 3837)
[16] (0.85, 4074)
[17] (0.84, 4363)
[18] (0.83, 4615)
[19] (0.82, 4855)
[20] (0.81, 5106)
[21] (0.8, 5391)
[22] (0.79, 5663)
[23] (0.78, 5918)
[24] (0.77, 6170)
[25] (0.76, 6450)
[26] (0.75, 6701)
[27] (0.74, 6992)
[28] (0.73, 7297)
[29] (0.72, 7570)
[30] (0.71, 7843)
[31] (0.7, 8119)
[32] (0.69, 8414)
[33] (0.68, 8676)
[34] (0.67, 8957)
[35] (0.66, 9234)
[36] (0.65, 9485)
[37] (0.64, 9743)
[38] (0.63, 10022)
[39] (0.62, 10276)
[40] (0.61, 10572)
[41] (0.6, 10839)
[42] (0.59, 11108)
[43] (0.58, 11399)
[44] (0.57, 11682)
[45] (0.56, 11928)
[46] (0.55, 12191)
[47] (0.54, 12452)
[48] (0.53, 12744)
[49] (0.52, 13008)
[50] (0.51, 13278)
[51] (0.5, 13551)
[52] (0.49, 13809)
[53] (0.48, 14091)
[54] (0.47, 14395)
[55] (0.46, 14657)
[56] (0.45, 14896)
[57] (0.44, 15147)
[58] (0.43, 15409)
[59] (0.42, 15690)
[60] (0.41, 15960)
[61] (0.4, 16229)
[62] (0.39, 16467)
[63] (0.38, 16743)
[64] (0.37, 17036)
[65] (0.36, 17294)
[66] (0.35, 17550)
[67] (0.34, 17835)
[68] (0.33, 18131)
[69] (0.32, 18409)
[70] (0.31, 18671)
[71] (0.3, 18972)
[72] (0.29, 19245)
[73] (0.28, 19505)
[74] (0.27, 19778)
[75] (0.26, 20047)
[76] (0.25, 20289)
[77] (0.24, 20566)
[78] (0.23, 20851)
[79] (0.22, 21125)
[80] (0.21, 21375)
[81] (0.2, 21676)
[82] (0.19, 21919)
[83] (0.18, 22183)
[84] (0.17, 22427)
[85] (0.16, 22693)
[86] (0.15, 22991)
[87] (0.14, 23248)
[88] (0.13, 23491)
[89] (0.12, 23784)
[90] (0.11, 24067)
[91] (0.1, 24360)
[92] (0.09, 24622)
[93] (0.08, 24897)
[94] (0.07, 25150)
[95] (0.06, 25428)
[96] (0.05, 25686)
[97] (0.04, 25975)
[98] (0.03, 26219)
[99] (0.02, 26452)
[100] (0.01, 26721)

[0]Quit or [Any other key]continue?
1

*** The buffer size is 300
***********************************************
 On-machine Exercise 05                       *
 Mission 1: External Merge Sort on a Big File *
 Mission 2: Construction of Primary Index     *
***********************************************
########################################################
Mission 1: External merge sort 
########################################################

Input the file name: [0]Quit
505

The internal sort is completed. Check the initial sorted runs! 

Now there are 160 runs.

Now there are 80 runs.

Now there are 40 runs.

Now there are 20 runs.

Now there are 10 runs.

Now there are 5 runs.

Now there are 3 runs.

Now there are 2 runs.

Now there are 1 runs.

The execution time ...
Internal Sort = 23.276 ms
External Sort = 27.374 ms
Total Execution Time = 50.65 ms


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Mission 2: Build the primary index 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

<Primary index>: (key, offset)
[1] (1, 0)
[2] (0.99, 497)
[3] (0.98, 940)
[4] (0.97, 1412)
[5] (0.96, 1917)
[6] (0.95, 2400)
[7] (0.94, 2894)
[8] (0.93, 3383)
[9] (0.92, 3869)
[10] (0.91, 4365)
[11] (0.9, 4867)
[12] (0.89, 5380)
[13] (0.88, 5848)
[14] (0.87, 6337)
[15] (0.86, 6812)
[16] (0.85, 7264)
[17] (0.84, 7752)
[18] (0.83, 8249)
[19] (0.82, 8720)
[20] (0.81, 9160)
[21] (0.8, 9629)
[22] (0.79, 10095)
[23] (0.78, 10576)
[24] (0.77, 11058)
[25] (0.76, 11531)
[26] (0.75, 11985)
[27] (0.74, 12485)
[28] (0.73, 12977)
[29] (0.72, 13432)
[30] (0.71, 13916)
[31] (0.7, 14384)
[32] (0.69, 14883)
[33] (0.68, 15328)
[34] (0.67, 15845)
[35] (0.66, 16307)
[36] (0.65, 16763)
[37] (0.64, 17221)
[38] (0.63, 17669)
[39] (0.62, 18144)
[40] (0.61, 18641)
[41] (0.6, 19100)
[42] (0.59, 19584)
[43] (0.58, 20057)
[44] (0.57, 20532)
[45] (0.56, 21000)
[46] (0.55, 21450)
[47] (0.54, 21926)
[48] (0.53, 22394)
[49] (0.52, 22892)
[50] (0.51, 23377)
[51] (0.5, 23853)
[52] (0.49, 24343)
[53] (0.48, 24786)
[54] (0.47, 25227)
[55] (0.46, 25710)
[56] (0.45, 26212)
[57] (0.44, 26670)
[58] (0.43, 27193)
[59] (0.42, 27705)
[60] (0.41, 28183)
[61] (0.4, 28643)
[62] (0.39, 29099)
[63] (0.38, 29595)
[64] (0.37, 30090)
[65] (0.36, 30565)
[66] (0.35, 31047)
[67] (0.34, 31499)
[68] (0.33, 31948)
[69] (0.32, 32440)
[70] (0.31, 32926)
[71] (0.3, 33385)
[72] (0.29, 33862)
[73] (0.28, 34374)
[74] (0.27, 34865)
[75] (0.26, 35338)
[76] (0.25, 35823)
[77] (0.24, 36283)
[78] (0.23, 36721)
[79] (0.22, 37176)
[80] (0.21, 37652)
[81] (0.2, 38180)
[82] (0.19, 38630)
[83] (0.18, 39098)
[84] (0.17, 39624)
[85] (0.16, 40095)
[86] (0.15, 40580)
[87] (0.14, 41085)
[88] (0.13, 41527)
[89] (0.12, 41968)
[90] (0.11, 42469)
[91] (0.1, 42958)
[92] (0.09, 43419)
[93] (0.08, 43889)
[94] (0.07, 44367)
[95] (0.06, 44807)
[96] (0.05, 45261)
[97] (0.04, 45752)
[98] (0.03, 46217)
[99] (0.02, 46737)
[100] (0.01, 47241)

[0]Quit or [Any other key]continue?
1

*** The buffer size is 300
***********************************************
 On-machine Exercise 05                       *
 Mission 1: External Merge Sort on a Big File *
 Mission 2: Construction of Primary Index     *
***********************************************
########################################################
Mission 1: External merge sort 
########################################################

Input the file name: [0]Quit
506

The internal sort is completed. Check the initial sorted runs! 

Now there are 285 runs.

Now there are 143 runs.

Now there are 72 runs.

Now there are 36 runs.

Now there are 18 runs.

Now there are 9 runs.

Now there are 5 runs.

Now there are 3 runs.

Now there are 2 runs.

Now there are 1 runs.

The execution time ...
Internal Sort = 40.168 ms
External Sort = 52.463 ms
Total Execution Time = 92.631 ms


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Mission 2: Build the primary index 
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

<Primary index>: (key, offset)
[1] (1, 0)
[2] (0.99, 845)
[3] (0.98, 1704)
[4] (0.97, 2556)
[5] (0.96, 3451)
[6] (0.95, 4317)
[7] (0.94, 5144)
[8] (0.93, 6029)
[9] (0.92, 6898)
[10] (0.91, 7705)
[11] (0.9, 8561)
[12] (0.89, 9366)
[13] (0.88, 10268)
[14] (0.87, 11116)
[15] (0.86, 11982)
[16] (0.85, 12790)
[17] (0.84, 13648)
[18] (0.83, 14530)
[19] (0.82, 15387)
[20] (0.81, 16267)
[21] (0.8, 17104)
[22] (0.79, 17920)
[23] (0.78, 18775)
[24] (0.77, 19647)
[25] (0.76, 20490)
[26] (0.75, 21424)
[27] (0.74, 22258)
[28] (0.73, 23112)
[29] (0.72, 24004)
[30] (0.71, 24877)
[31] (0.7, 25728)
[32] (0.69, 26601)
[33] (0.68, 27424)
[34] (0.67, 28295)
[35] (0.66, 29131)
[36] (0.65, 29949)
[37] (0.64, 30808)
[38] (0.63, 31680)
[39] (0.62, 32547)
[40] (0.61, 33388)
[41] (0.6, 34240)
[42] (0.59, 35134)
[43] (0.58, 36014)
[44] (0.57, 36846)
[45] (0.56, 37668)
[46] (0.55, 38482)
[47] (0.54, 39335)
[48] (0.53, 40223)
[49] (0.52, 41108)
[50] (0.51, 41939)
[51] (0.5, 42800)
[52] (0.49, 43680)
[53] (0.48, 44491)
[54] (0.47, 45331)
[55] (0.46, 46180)
[56] (0.45, 47022)
[57] (0.44, 47893)
[58] (0.43, 48732)
[59] (0.42, 49550)
[60] (0.41, 50438)
[61] (0.4, 51296)
[62] (0.39, 52123)
[63] (0.38, 52969)
[64] (0.37, 53840)
[65] (0.36, 54706)
[66] (0.35, 55563)
[67] (0.34, 56412)
[68] (0.33, 57252)
[69] (0.32, 58075)
[70] (0.31, 58936)
[71] (0.3, 59791)
[72] (0.29, 60635)
[73] (0.28, 61422)
[74] (0.27, 62250)
[75] (0.26, 63099)
[76] (0.25, 63897)
[77] (0.24, 64759)
[78] (0.23, 65662)
[79] (0.22, 66577)
[80] (0.21, 67393)
[81] (0.2, 68261)
[82] (0.19, 69100)
[83] (0.18, 69977)
[84] (0.17, 70839)
[85] (0.16, 71649)
[86] (0.15, 72528)
[87] (0.14, 73347)
[88] (0.13, 74244)
[89] (0.12, 75113)
[90] (0.11, 75963)
[91] (0.1, 76810)
[92] (0.09, 77696)
[93] (0.08, 78549)
[94] (0.07, 79396)
[95] (0.06, 80234)
[96] (0.05, 81051)
[97] (0.04, 81962)
[98] (0.03, 82794)
[99] (0.02, 83676)
[100] (0.01, 84511)

[0]Quit or [Any other key]continue?